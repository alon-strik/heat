tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml

inputs:

# This a simple way to use inputes, all inputes can also be replaces by using external inpute.yaml file
  agent_user:
    default: Admin

  agent_password:
    default: Admin

## LAN network - communication with IP-PBX

  network_lan:
    type: string
    default: sbc-lan

  network_lan_subnet:
    type: string
    default: sbc-lan-subnet

## WAN/DMZ network - communication with router or CPE

  network_wan:
    type: string
    default: sbc-wan

  network_wan_subnet:
    type: string
    default: sbc-wan-subnet

# Cloudify management network

  external_network_name:
    type: string
    default: external

  management_network_name:
     type: string
     default: cloudify-management-network

node_templates:

  SBChost:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image: d1f4c679-5784-4bfa-bdff-efb3d624f826           # SBC image id
      flavor: 196235bc-7ca5-4085-ac81-7e0242bda3f9          # 2cores 4096 RAM 40G disk

    interfaces:
      cloudify.interfaces.lifecycle:
        create:
         inputs:
           args:
              config_drive: true
              name: AudioCodes-SBC-Server
              userdata: |
                #dhcp-address
                #network-if
                0 cloudify-mgmt 5 - - - -
                1 lan 6 - - - -
                2 wan 5 - - - -
                #ini-file
                EnableWebAccessFromAllInterfaces = 1

    relationships:
        - target: server_float_ip
          type: cloudify.openstack.server_connected_to_floating_ip
        - target: network_lan
          type: cloudify.relationships.connected_to
        - target: network_wan
          type: cloudify.relationships.connected_to

  network_lan:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: network_lan }
      use_external_resource : false

  network_lan_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: network_lan_subnet }
      use_external_resource : false
      subnet:
        ip_version: 4
        cidr: 10.10.1.0/24
    relationships:
      - target: network_lan
        type: cloudify.relationships.contained_in

  network_wan:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: network_wan }
      use_external_resource : false

  network_wan_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: network_wan_subnet }
      use_external_resource : false
      subnet:
        ip_version: 4
        cidr: 20.20.1.0/24
    relationships:
      - target: network_wan
        type: cloudify.relationships.contained_in

  server_float_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }

